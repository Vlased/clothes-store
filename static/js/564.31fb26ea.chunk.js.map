{"version":3,"file":"static/js/564.31fb26ea.chunk.js","mappings":"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","sources":["Firebase/isUsernameAvailable.js","Pages/SignUp/sign-up.jsx","Redux/Actions/shouldUserLoginActions.js"],"sourcesContent":["import { collection, getDocs } from \"firebase/firestore\";\r\nimport { db } from \"./config\";\r\n\r\nasync function isUsernameAvailable(name){\r\n    const allUsers = await getDocs(collection(db, \"users\"));\r\n    let isAvailable = true;\r\n\r\n    allUsers.forEach(user => {\r\n        const nameOfUser = user.data().username\r\n        if(nameOfUser === name){\r\n            isAvailable = false;\r\n            return;\r\n        }\r\n    })\r\n\r\n    return isAvailable;\r\n}\r\n\r\nexport default isUsernameAvailable;","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth, db } from \"../../Firebase/config\";\r\nimport { doc, setDoc, getDoc } from \"firebase/firestore\"; \r\nimport * as RoutesTypes from \"../../Constants/routesTypes\"\r\nimport { setActiveUser } from \"../../Redux/Actions/userActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport isUsernameAvailable from \"../../Firebase/isUsernameAvailable\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./sign-up.scss\";\r\nimport { setIsBeingLoaded } from \"../../Redux/Actions/isBeingLoadedActions\";\r\nimport { setShouldUserLogin } from \"../../Redux/Actions/shouldUserLoginActions\";\r\n\r\nexport default function SignUp(){\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const user = useSelector(obj => obj.currentUser.user);\r\n    const shouldUserLogin = useSelector(obj => obj.shouldUserLogin);\r\n\r\n    const [userData, setUserData] = useState({\r\n        fullName: \"\",\r\n        username: \"\",\r\n        emailAddress: \"\",\r\n        password: \"\"\r\n    })\r\n    const [error, setError] = useState(shouldUserLogin ? \"You must sign up first\" : \"\");\r\n    const [isAvailable, setIsAvailable] = useState(false);\r\n\r\n    const isInvalid = userData.password.length < 6\r\n        || userData.emailAddress.length < 6\r\n        || userData.username.length < 6\r\n        || userData.fullName.length < 6\r\n        \r\n    useEffect(() => {\r\n        if(user.username){\r\n            navigate(RoutesTypes.PROFILE)\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        async function asyncHandle() {\r\n            const handleIsAvailable = await isUsernameAvailable(userData.username);\r\n\r\n            if (!handleIsAvailable) {\r\n                setError(\"This username is not available\");\r\n                setIsAvailable(false);\r\n                return;\r\n            }\r\n\r\n            setError(shouldUserLogin ? \"You must sign up first\" : \"\");\r\n            setIsAvailable(true);\r\n        }\r\n\r\n        asyncHandle();\r\n    }, [userData.username])\r\n\r\n    async function handleLogin(event) {\r\n        event.preventDefault();\r\n        dispatch(setIsBeingLoaded(true));\r\n\r\n        if (!isAvailable) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const user = await createUserWithEmailAndPassword(auth, userData.emailAddress, userData.password);\r\n            await setDoc(doc(db, \"users\", user.user.uid), {\r\n                userId: user.user.uid,\r\n                username: userData.username.toLowerCase(),\r\n                fullName: userData.fullName,\r\n                emailAddress: userData.emailAddress,\r\n                gender: \"\",\r\n                birthday: \"\",\r\n                phoneNumber: \"\",\r\n                purchasesList: [],\r\n                profileImage: \"\",\r\n                dateCreated: Date.now()\r\n            })\r\n\r\n            const currentDoc = await getDoc(doc(db, \"users\", user.user.uid));\r\n\r\n            dispatch(setActiveUser(currentDoc.data()));\r\n            if(shouldUserLogin){\r\n                dispatch(setShouldUserLogin(false));\r\n                navigate(RoutesTypes.CART);\r\n            }\r\n            else{\r\n                navigate(RoutesTypes.PROFILE);\r\n            }\r\n        } \r\n        catch (error) {\r\n            setUserData(prevData => ({...prevData, emailAddress: \"\"}))\r\n            setUserData(prevData => ({...prevData, password: \"\"}))\r\n            setError(error.message);\r\n            console.log(error);\r\n        }\r\n\r\n        dispatch(setIsBeingLoaded(false));\r\n    }\r\n\r\n    return (\r\n        <motion.div \r\n            className=\"login-register col-12 col-sm-8 col-md-6\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n        >\r\n            <img\r\n                src=\"../Images/icon.svg\"\r\n                className=\"login-register-icon\"\r\n            />\r\n            <h1>Welcome to My Site's Name</h1>\r\n\r\n            {error ?\r\n                <p className=\"info red\">{error}</p> :\r\n                <p className=\"info\">Sign up to continue</p>}\r\n            <form\r\n                method=\"POST\"\r\n                className=\"login-register-form\"\r\n            >\r\n                <input\r\n                    aria-label=\"Enter your username\"\r\n                    className=\"\"\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    value={userData.username}\r\n                    onChange={(event) => setUserData(prevData => ({...prevData, username: event.target.value}))}\r\n                />\r\n                <input\r\n                    aria-label=\"Enter your full name\"\r\n                    className=\"\"\r\n                    type=\"text\"\r\n                    placeholder=\"Full name\"\r\n                    value={userData.fullName}\r\n                    onChange={(event) => setUserData(prevData => ({...prevData, fullName: event.target.value}))}\r\n                />\r\n                <input\r\n                    aria-label=\"Enter your email address\"\r\n                    className=\"\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email address\"\r\n                    value={userData.emailAddress}\r\n                    onChange={(event) => setUserData(prevData => ({...prevData, emailAddress: event.target.value}))}\r\n                />\r\n                <input\r\n                    aria-label=\"Enter your password\"\r\n                    className=\"\"\r\n                    autoComplete=\"on\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={userData.password}\r\n                    onChange={(event) => setUserData(prevData => ({...prevData, password: event.target.value}))}\r\n                />\r\n                <div className=\"check-out\">\r\n                    <button\r\n                        disabled={!isAvailable || isInvalid}\r\n                        type=\"submit\"\r\n                        className={`check-out-button ${(!isAvailable || isInvalid) && \"disabled-button\"}`}\r\n                        onClick={(event) => handleLogin(event)}\r\n                    >\r\n                        <h2 className=\"h2-default\">Sign up</h2>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            <div className=\"link\">\r\n                <p className=\"info\">Already have an account?</p>\r\n                <Link to={RoutesTypes.LOGIN} className=\"info blue\">Login</Link>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}","import * as ActionsTypes from \"../Constants/shouldUserLoginActionTypes\";\r\n\r\nexport function setShouldUserLogin(value){\r\n    return {\r\n        type: ActionsTypes.SET_SHOULD_USER_LOGIN,\r\n        payload: value\r\n    }\r\n}"],"names":["isUsernameAvailable","name","getDocs","collection","db","allUsers","isAvailable","forEach","user","data","username","SignUp","dispatch","useDispatch","navigate","useNavigate","useSelector","obj","currentUser","shouldUserLogin","useState","fullName","emailAddress","password","userData","setUserData","error","setError","setIsAvailable","isInvalid","length","event","preventDefault","setIsBeingLoaded","createUserWithEmailAndPassword","auth","setDoc","doc","uid","userId","toLowerCase","gender","birthday","phoneNumber","purchasesList","profileImage","dateCreated","Date","now","getDoc","currentDoc","setActiveUser","setShouldUserLogin","RoutesTypes","prevData","message","console","log","useEffect","asyncHandle","motion","className","initial","opacity","animate","exit","src","method","type","placeholder","value","onChange","target","autoComplete","disabled","onClick","handleLogin","to","ActionsTypes","payload"],"sourceRoot":""}