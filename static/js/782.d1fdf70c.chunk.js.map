{"version":3,"file":"static/js/782.d1fdf70c.chunk.js","mappings":"sUAae,SAASA,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAOC,EAAAA,EAAAA,KAAY,SAAAC,GAAG,OAAIA,EAAIC,YAAYH,QAC1CI,GAAkBH,EAAAA,EAAAA,KAAY,SAAAC,GAAG,OAAIA,EAAIE,mBACzCC,GAAWC,EAAAA,EAAAA,MAEjB,GAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAA0BJ,EAAAA,EAAAA,UAASH,EAAkB,uBAAyB,IAA9E,eAAOQ,EAAP,KAAcC,EAAd,KAEMC,EAAYJ,EAASK,OAAS,GAAKP,EAAaO,OAAS,EAE/D,GAAIf,EAAKgB,SACL,OAAO,SAAC,KAAD,CAAUC,GAAIC,EAAAA,KAbE,wCAgB3B,WAA2BC,GAA3B,gFACIA,EAAMC,iBACNtB,GAASuB,EAAAA,EAAAA,IAAiB,IAF9B,mBAK2BC,EAAAA,EAAAA,IAA2BC,EAAAA,GAAMf,EAAcE,GAL1E,cAKcV,EALd,iBAMiCwB,EAAAA,EAAAA,KAAOC,EAAAA,EAAAA,IAAIC,EAAAA,GAAI,QAAS1B,EAAKA,KAAK2B,MANnE,OAMcC,EANd,OAOQC,QAAQC,IAAIF,EAAWG,QAEvBjC,GAASkC,EAAAA,EAAAA,IAAcJ,EAAWG,SAC/B3B,GACCN,GAASmC,EAAAA,EAAAA,IAAmB,IAC5B5B,EAASa,EAAAA,KAGTb,EAASa,EAAAA,IAfrB,kDAmBQT,EAAgB,IAChBE,EAAY,IACZE,EAAS,KAAMqB,SACfL,QAAQC,IAAR,MAtBR,QAyBIhC,GAASuB,EAAAA,EAAAA,IAAiB,IAzB9B,2DAhB2B,sBA4C3B,OACI,UAACc,EAAA,MAAD,CACIC,UAAU,0CACVC,QAAS,CAAEC,QAAS,GACpBC,QAAS,CAAED,QAAS,GACpBE,KAAM,CAAEF,QAAS,GAJrB,WAMI,gBACIG,IAAKC,iCACLN,UAAU,sBACVO,IAAI,wBAER,sDACC/B,GACG,cAAGwB,UAAU,WAAb,SAAyBxB,KACzB,cAAGwB,UAAU,OAAb,kCACJ,kBACIQ,OAAO,OACPR,UAAU,sBAFd,WAII,kBACI,aAAW,2BACXA,UAAU,GACVS,KAAK,OACLC,YAAY,gBACZC,MAAOvC,EACPwC,SAAU,SAAC7B,GAAD,OAAWV,EAAgBU,EAAM8B,OAAOF,WAEtD,kBACI,aAAW,sBACXX,UAAU,GACVc,aAAa,KACbL,KAAK,WACLC,YAAY,WACZC,MAAOrC,EACPsC,SAAU,SAAC7B,GAAD,OAAWR,EAAYQ,EAAM8B,OAAOF,WAElD,gBAAKX,UAAU,YAAf,UACI,mBACIe,SAAUrC,EACV+B,KAAK,SACLT,UAAS,2BAAsBtB,GAAa,mBAC5CsC,QAAS,SAACjC,GAAD,OAtFF,2CAsFakC,CAAYlC,IAJpC,UAMI,eAAIiB,UAAU,aAAd,4BAIZ,cAAGA,UAAU,YAAb,+BACA,iBAAKA,UAAU,OAAf,WACI,cAAGA,UAAU,OAAb,qCACA,SAAC,KAAD,CAAMnB,GAAIC,EAAAA,GAAqBkB,UAAU,YAAzC,6B,mEC1GT,SAASH,EAAmBc,GAC/B,MAAO,CACHF,KAAMS,EAAAA,EACNC,QAASR","sources":["Pages/Login/login.jsx","Redux/Actions/shouldUserLoginActions.js"],"sourcesContent":["import React, { useState  } from \"react\";\r\nimport { Link, useNavigate, Navigate } from \"react-router-dom\";\r\nimport * as RoutesTypes from \"../../Constants/routesTypes\"\r\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth, db } from \"../../Firebase/config\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setActiveUser } from \"../../Redux/Actions/userActions\";\r\nimport { doc, getDoc } from \"firebase/firestore\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./login.scss\";\r\nimport { setIsBeingLoaded } from \"../../Redux/Actions/isBeingLoadedActions\";\r\nimport { setShouldUserLogin } from \"../../Redux/Actions/shouldUserLoginActions\";\r\n\r\nexport default function Login(){\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(obj => obj.currentUser.user);\r\n    const shouldUserLogin = useSelector(obj => obj.shouldUserLogin);\r\n    const navigate = useNavigate();\r\n\r\n    const [emailAddress, setEmailAddress] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [error, setError] = useState(shouldUserLogin ? \"You must login first\" : \"\");\r\n\r\n    const isInvalid = password.length < 6 || emailAddress.length < 6\r\n\r\n    if (user.username) {\r\n        return <Navigate to={RoutesTypes.PROFILE}/>\r\n    }\r\n\r\n    async function handleLogin(event){\r\n        event.preventDefault();\r\n        dispatch(setIsBeingLoaded(true));\r\n        \r\n        try {\r\n            const user = await signInWithEmailAndPassword(auth, emailAddress, password);\r\n            const currentDoc = await getDoc(doc(db, \"users\", user.user.uid))\r\n            console.log(currentDoc.data())\r\n\r\n            dispatch(setActiveUser(currentDoc.data()));\r\n            if(shouldUserLogin){\r\n                dispatch(setShouldUserLogin(false));\r\n                navigate(RoutesTypes.CART);\r\n            }\r\n            else{\r\n                navigate(RoutesTypes.PROFILE);\r\n            }\r\n        } \r\n        catch (error) {\r\n            setEmailAddress('');\r\n            setPassword('');\r\n            setError(error.message);\r\n            console.log(error);\r\n        }\r\n\r\n        dispatch(setIsBeingLoaded(false));\r\n    }\r\n\r\n    return (\r\n        <motion.div \r\n            className=\"login-register col-12 col-sm-8 col-md-6\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n        >\r\n            <img\r\n                src={process.env.PUBLIC_URL + \"/Images/icon.svg\"}\r\n                className=\"login-register-icon\"\r\n                alt=\"The company's logo\"\r\n            />\r\n            <h1>Welcome to My Site's Name</h1>\r\n            {error ?\r\n                <p className=\"info red\">{error}</p> :\r\n                <p className=\"info\">Sign in to continue</p>}\r\n            <form\r\n                method=\"POST\"\r\n                className=\"login-register-form\"\r\n            >\r\n                <input\r\n                    aria-label=\"Enter your email address\"\r\n                    className=\"\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email address\"\r\n                    value={emailAddress}\r\n                    onChange={(event) => setEmailAddress(event.target.value)}\r\n                />\r\n                <input\r\n                    aria-label=\"Enter your password\"\r\n                    className=\"\"\r\n                    autoComplete=\"on\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={password}\r\n                    onChange={(event) => setPassword(event.target.value)}\r\n                />\r\n                <div className=\"check-out\">\r\n                    <button\r\n                        disabled={isInvalid}\r\n                        type=\"submit\"\r\n                        className={`check-out-button ${isInvalid && \"disabled-button\"}`}\r\n                        onClick={(event) => handleLogin(event)}\r\n                    >\r\n                        <h2 className=\"h2-default\">Log In</h2>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            <a className=\"info blue\">Forgot password?</a>\r\n            <div className=\"link\">\r\n                <p className=\"info\">Don't have an account?</p>\r\n                <Link to={RoutesTypes.SIGN_UP} className=\"info blue\">Sign up</Link>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}","import * as ActionsTypes from \"../Constants/shouldUserLoginActionTypes\";\r\n\r\nexport function setShouldUserLogin(value){\r\n    return {\r\n        type: ActionsTypes.SET_SHOULD_USER_LOGIN,\r\n        payload: value\r\n    }\r\n}"],"names":["Login","dispatch","useDispatch","user","useSelector","obj","currentUser","shouldUserLogin","navigate","useNavigate","useState","emailAddress","setEmailAddress","password","setPassword","error","setError","isInvalid","length","username","to","RoutesTypes","event","preventDefault","setIsBeingLoaded","signInWithEmailAndPassword","auth","getDoc","doc","db","uid","currentDoc","console","log","data","setActiveUser","setShouldUserLogin","message","motion","className","initial","opacity","animate","exit","src","process","alt","method","type","placeholder","value","onChange","target","autoComplete","disabled","onClick","handleLogin","ActionsTypes","payload"],"sourceRoot":""}