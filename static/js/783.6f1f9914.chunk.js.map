{"version":3,"file":"static/js/783.6f1f9914.chunk.js","mappings":"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","sources":["Pages/ProductPage/product-page.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Counter } from \"../../Components\";\r\nimport { nanoid } from \"nanoid\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addToCart } from \"../../Redux/Actions/cartActions\";\r\nimport { motion } from \"framer-motion\";\r\nimport { Review } from \"../../Components\";\r\nimport { getDoc, doc, setDoc, updateDoc } from \"firebase/firestore\";\r\nimport { db } from \"../../Firebase/config\";\r\nimport { Confirmation } from \"../../Components\";\r\nimport { TextareaModal } from \"../../Components\";\r\nimport { RelatedProducts } from \"../../Components\";\r\nimport \"./product-page.scss\";\r\nimport { setIsPageDisabled } from \"../../Redux/Actions/disabledActions\";\r\nimport { setIsBeingLoaded } from \"../../Redux/Actions/isBeingLoadedActions\";\r\n\r\nexport default function ProductPage(){\r\n    const dispatch = useDispatch();\r\n    const cart = useSelector(obj => obj.cart);\r\n    const user = useSelector(obj => obj.currentUser.user)\r\n    const isPageDisabled = useSelector(obj => obj.isPageDisabled);\r\n    const allItems = useSelector(obj => obj.allItems);\r\n\r\n    const { id } = useParams();\r\n    const data = allItems[id-1];\r\n\r\n    const [amount, setAmount] = useState(amountOfAppears(data))\r\n    const [reviews, setReviews] = useState(0);\r\n    const [currentTab, setCurrentTab] = useState(0);\r\n    const [comments, setComments] = useState([]);\r\n    const [commentIdToDelete, setCommentIdToDelete] = useState(null);\r\n\r\n    useEffect(() => {\r\n        async function getComments(){\r\n            const commentsRef = doc(db, \"comments\", `comments${id}`);\r\n            const allItemsComments = await getDoc(commentsRef);\r\n\r\n            if(!allItemsComments.data()){\r\n                await setDoc(commentsRef, {\r\n                    allComments: []\r\n                })\r\n                return;\r\n            }\r\n\r\n            setComments(allItemsComments.data().allComments);\r\n        }\r\n\r\n        getComments();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(!isPageDisabled){\r\n            setCommentIdToDelete(null);\r\n        }\r\n    }, [isPageDisabled])\r\n\r\n    console.log(commentIdToDelete);\r\n\r\n    const date = new Date();\r\n\r\n    function amountOfAppears(obj) {\r\n        return cart.reduce((value, elem) => {\r\n            if (elem.id === obj.id) {\r\n                value++;\r\n            }\r\n            return value;\r\n        }, 0)\r\n    }\r\n\r\n    async function addComment(text) {\r\n        dispatch(setIsBeingLoaded(true));\r\n\r\n        const objToUpdate = {\r\n            text: text,\r\n            profileImage: user.profileImage,\r\n            username: user.username,\r\n            fullName: user.fullName,\r\n            date: `${date.getDate()}-${date.getMonth()}-${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`,\r\n            id: nanoid()\r\n        }\r\n\r\n        await updateDoc(doc(db, \"comments\", `comments${id}`), {\r\n            allComments: [...comments, objToUpdate]\r\n        })\r\n\r\n        setComments(prevComments => [...prevComments, objToUpdate])\r\n\r\n        dispatch(setIsBeingLoaded(false));\r\n    }\r\n\r\n    async function deleteComment(productId){\r\n        dispatch(setIsBeingLoaded(true));\r\n\r\n        await updateDoc(doc(db, \"comments\", `comments${id}`), {\r\n            allComments: comments.filter(elem => elem.id !== productId)\r\n        })\r\n\r\n        setComments(prevComments => prevComments.filter(elem => elem.id !== productId))\r\n\r\n        dispatch(setIsBeingLoaded(false));\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            className=\"div-column\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n        >\r\n            {isPageDisabled &&\r\n                (commentIdToDelete ? \r\n                <Confirmation\r\n                    text=\"delete your comment\"\r\n                    callback={() => deleteComment(commentIdToDelete)}\r\n                /> :\r\n                <TextareaModal \r\n                    labelText=\"Write your comment below\"\r\n                    buttonText=\"Publish\"\r\n                    callback={addComment}\r\n                />)\r\n            }\r\n            <div className={`item-info-container col-12 col-sm-11 col-md-10 ${isPageDisabled && \"disabled-page\"}`}>\r\n                <div className=\"item-info-image product-image\">\r\n                    <img src={data.image} />\r\n                </div>\r\n                <div className=\"item-info-data\">\r\n                    <div className=\"item-info-title\">\r\n                        <h1>{data.title}</h1>\r\n                        <div className=\"item-info-review\">\r\n                            <p className=\"review-counter\">{reviews} reviews</p>\r\n                            <button\r\n                                onClick={() => setTimeout(() => {\r\n                                    setReviews(prevVal => prevVal + 1)\r\n                                }, 2000)}\r\n                            ><p>Submit a review</p></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"product-prices\">\r\n                        <p>{`$${data.price.toFixed(2)}`}</p>\r\n                        <p><strike>{`$${(data.price * 1.55).toFixed(2)}`}</strike></p>\r\n                        <p>35% Off</p>\r\n                    </div>\r\n                    <div className=\"item-extra-info\">\r\n                        <p>Availability:</p>\r\n                        <p>{data.rating.count ? \"In stock\" : \"Unavailable\"}</p>\r\n                        <p>Category:</p>\r\n                        <p>{data.category[0].toUpperCase() + data.category.slice(1, data.category.length)}</p>\r\n                        <p>Free shipping</p>\r\n                    </div>\r\n                    <div className=\"item-data-counter\">\r\n                        <button \r\n                            className={`add-to-cart counter ${cart.some(item => item.id === data.id) && \"disabled-button\"}`}\r\n                            disabled={cart.some(item => item.id === data.id)}\r\n                            onClick={() => {\r\n                                setAmount(prevAmount => prevAmount + 1)\r\n                                dispatch(addToCart(data))\r\n                            }}\r\n                        >\r\n                            <img src={process.env.PUBLIC_URL + \"/Images/blue-cart.svg\"} />\r\n                            <p>Add To Cart</p>\r\n                        </button>\r\n                        <Counter\r\n                            amount={amount}\r\n                            setAmount={setAmount}\r\n                            availableItems={data.rating.count}\r\n                            data={data}\r\n                        />\r\n                    </div>\r\n                    <div className=\"share-container\">\r\n                        <a \r\n                            className=\"share-facebook\"\r\n                            href=\"https://uk-ua.facebook.com/\"\r\n                        >\r\n                            <img src={process.env.PUBLIC_URL + \"/Images/facebook.svg\"}/>\r\n                            <p>Share on Facebook</p>\r\n                        </a>\r\n                        <a \r\n                            className=\"share-twitter\"\r\n                            href=\"https://twitter.com/?lang=uk\"\r\n                        >\r\n                            <img src={process.env.PUBLIC_URL + \"/Images/twitter.svg\"} />\r\n                            <p>Share on Twitter</p>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className={`product-information col-12 col-sm-11 col-md-10 ${isPageDisabled && \"disabled-page\"}`}>\r\n                <div className=\"title\">\r\n                    <button \r\n                        onClick={() => setCurrentTab(0)}\r\n                        className={currentTab === 0 ? \"chosen\": \"not-chosen\"}\r\n                    >\r\n                        <p>Product Information</p>\r\n                    </button>\r\n                    <button \r\n                        onClick={() => setCurrentTab(1)}\r\n                        className={currentTab === 1 ? \"chosen\": \"not-chosen\"}\r\n                    >\r\n                        <p>Reviews</p>\r\n                    </button>\r\n                    {currentTab === 1 &&\r\n                        user.userId &&\r\n                        <button\r\n                            className=\"add-button\"\r\n                            onClick={() => dispatch(setIsPageDisabled(true))}\r\n                        >\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" strokeWidth={2}>\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" d=\"M12 4v16m8-8H4\" />\r\n                            </svg>\r\n                        </button>\r\n                    }\r\n                </div>\r\n                {currentTab === 0 ?\r\n                    <div className=\"info\">\r\n                        <p>{data.description}</p>\r\n                    </div> :\r\n                    comments.length === 0 ?\r\n                        <div className=\"info\">\r\n                            {user.userId ? \r\n                                <p>Add your first comment</p>:\r\n                                <p>No comments here yet</p>\r\n                            }\r\n                        </div> :\r\n                        <div className=\"reviews-container\">\r\n                            {comments.map(elem => <Review\r\n                                {...elem}\r\n                                currentUser={user.username}\r\n                                callback={() => {\r\n                                    setCommentIdToDelete(elem.id)\r\n                                    dispatch(setIsPageDisabled(true))\r\n                                }}\r\n                                key={elem.id}\r\n                            />)}\r\n                        </div>\r\n                }\r\n            </div>\r\n            <RelatedProducts\r\n                id={data.id}\r\n                category={data.category}\r\n            />\r\n        </motion.div>\r\n    )\r\n}"],"names":["ProductPage","obj","dispatch","useDispatch","cart","useSelector","user","currentUser","isPageDisabled","allItems","id","useParams","data","useState","reduce","value","elem","amount","setAmount","reviews","setReviews","currentTab","setCurrentTab","comments","setComments","commentIdToDelete","setCommentIdToDelete","useEffect","commentsRef","doc","db","getDoc","allItemsComments","setDoc","allComments","getComments","console","log","date","Date","text","setIsBeingLoaded","objToUpdate","profileImage","username","fullName","getDate","getMonth","getFullYear","getHours","getMinutes","nanoid","updateDoc","prevComments","productId","filter","motion","className","initial","opacity","animate","exit","callback","deleteComment","labelText","buttonText","src","image","title","onClick","setTimeout","prevVal","price","toFixed","rating","count","category","toUpperCase","slice","length","some","item","disabled","prevAmount","addToCart","process","availableItems","href","userId","setIsPageDisabled","xmlns","fill","viewBox","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","description","map","key"],"sourceRoot":""}