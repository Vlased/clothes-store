{"version":3,"file":"static/js/564.7a21bba0.chunk.js","mappings":"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","sources":["Firebase/isUsernameAvailable.js","Pages/SignUp/sign-up.jsx","Redux/Actions/shouldUserLoginActions.js"],"sourcesContent":["import { collection, getDocs } from \"firebase/firestore\";\r\nimport { db } from \"./config\";\r\n\r\nasync function isUsernameAvailable(name){\r\n    const allUsers = await getDocs(collection(db, \"users\"));\r\n    let isAvailable = true;\r\n\r\n    allUsers.forEach(user => {\r\n        const nameOfUser = user.data().username\r\n        if(nameOfUser === name){\r\n            isAvailable = false;\r\n            return;\r\n        }\r\n    })\r\n\r\n    return isAvailable;\r\n}\r\n\r\nexport default isUsernameAvailable;","import React, { useState, useEffect } from \"react\";\r\nimport { Link, Navigate, useNavigate } from \"react-router-dom\";\r\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\r\nimport { auth, db } from \"../../Firebase/config\";\r\nimport { doc, setDoc, getDoc } from \"firebase/firestore\"; \r\nimport * as RoutesTypes from \"../../Constants/routesTypes\"\r\nimport { setActiveUser } from \"../../Redux/Actions/userActions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport isUsernameAvailable from \"../../Firebase/isUsernameAvailable\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./sign-up.scss\";\r\nimport { setIsBeingLoaded } from \"../../Redux/Actions/isBeingLoadedActions\";\r\nimport { setShouldUserLogin } from \"../../Redux/Actions/shouldUserLoginActions\";\r\n\r\nexport default function SignUp(){\r\n    const dispatch = useDispatch();\r\n    const navigate = useNavigate();\r\n    const user = useSelector(obj => obj.currentUser.user);\r\n    const shouldUserLogin = useSelector(obj => obj.shouldUserLogin);\r\n\r\n    const [userData, setUserData] = useState({\r\n        fullName: \"\",\r\n        username: \"\",\r\n        emailAddress: \"\",\r\n        password: \"\"\r\n    })\r\n    const [error, setError] = useState(shouldUserLogin ? \"You must sign up first\" : \"\");\r\n    const [isAvailable, setIsAvailable] = useState(false);\r\n\r\n    const isInvalid = userData.password.length < 6\r\n        || userData.emailAddress.length < 6\r\n        || userData.username.length < 6\r\n        || userData.fullName.length < 6\r\n\r\n    useEffect(() => {\r\n        async function asyncHandle() {\r\n            const handleIsAvailable = await isUsernameAvailable(userData.username);\r\n\r\n            if (!handleIsAvailable) {\r\n                setError(\"This username is not available\");\r\n                setIsAvailable(false);\r\n                return;\r\n            }\r\n\r\n            setError(shouldUserLogin ? \"You must sign up first\" : \"\");\r\n            setIsAvailable(true);\r\n        }\r\n\r\n        asyncHandle();\r\n    }, [userData.username])\r\n\r\n    if (user.username) {\r\n        return <Navigate to={RoutesTypes.PROFILE} />\r\n    }\r\n\r\n    async function handleLogin(event) {\r\n        event.preventDefault();\r\n        dispatch(setIsBeingLoaded(true));\r\n\r\n        if (!isAvailable) {\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const user = await createUserWithEmailAndPassword(auth, userData.emailAddress, userData.password);\r\n            await setDoc(doc(db, \"users\", user.user.uid), {\r\n                userId: user.user.uid,\r\n                username: userData.username.toLowerCase(),\r\n                fullName: userData.fullName,\r\n                emailAddress: userData.emailAddress,\r\n                gender: \"\",\r\n                birthday: \"\",\r\n                phoneNumber: \"\",\r\n                purchasesList: [],\r\n                profileImage: \"\",\r\n                dateCreated: Date.now()\r\n            })\r\n\r\n            const currentDoc = await getDoc(doc(db, \"users\", user.user.uid));\r\n\r\n            dispatch(setActiveUser(currentDoc.data()));\r\n            if(shouldUserLogin){\r\n                dispatch(setShouldUserLogin(false));\r\n                navigate(RoutesTypes.CART);\r\n            }\r\n            else{\r\n                navigate(RoutesTypes.PROFILE);\r\n            }\r\n        } \r\n        catch (error) {\r\n            setUserData(prevData => ({...prevData, emailAddress: \"\"}))\r\n            setUserData(prevData => ({...prevData, password: \"\"}))\r\n            setError(error.message);\r\n            console.log(error);\r\n        }\r\n\r\n        dispatch(setIsBeingLoaded(false));\r\n    }\r\n\r\n    return (\r\n        <motion.div \r\n            className=\"login-register col-12 col-sm-8 col-md-6\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n        >\r\n            <img\r\n                src={process.env.PUBLIC_URL + \"/Images/icon.svg\"}\r\n                className=\"login-register-icon\"\r\n            />\r\n            <h1>Welcome to My Site's Name</h1>\r\n\r\n            {error ?\r\n                <p className=\"info red\">{error}</p> :\r\n                <p className=\"info\">Sign up to continue</p>}\r\n            <form\r\n                method=\"POST\"\r\n                className=\"login-register-form\"\r\n            >\r\n                <input\r\n                    aria-label=\"Enter your username\"\r\n                    className=\"\"\r\n                    type=\"text\"\r\n                    placeholder=\"Username\"\r\n                    value={userData.username}\r\n                    onChange={(event) => setUserData(prevData => ({...prevData, username: event.target.value}))}\r\n                />\r\n                <input\r\n                    aria-label=\"Enter your full name\"\r\n                    className=\"\"\r\n                    type=\"text\"\r\n                    placeholder=\"Full name\"\r\n                    value={userData.fullName}\r\n                    onChange={(event) => setUserData(prevData => ({...prevData, fullName: event.target.value}))}\r\n                />\r\n                <input\r\n                    aria-label=\"Enter your email address\"\r\n                    className=\"\"\r\n                    type=\"text\"\r\n                    placeholder=\"Email address\"\r\n                    value={userData.emailAddress}\r\n                    onChange={(event) => setUserData(prevData => ({...prevData, emailAddress: event.target.value}))}\r\n                />\r\n                <input\r\n                    aria-label=\"Enter your password\"\r\n                    className=\"\"\r\n                    autoComplete=\"on\"\r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={userData.password}\r\n                    onChange={(event) => setUserData(prevData => ({...prevData, password: event.target.value}))}\r\n                />\r\n                <div className=\"check-out\">\r\n                    <button\r\n                        disabled={!isAvailable || isInvalid}\r\n                        type=\"submit\"\r\n                        className={`check-out-button ${(!isAvailable || isInvalid) && \"disabled-button\"}`}\r\n                        onClick={(event) => handleLogin(event)}\r\n                    >\r\n                        <h2 className=\"h2-default\">Sign up</h2>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            <div className=\"link\">\r\n                <p className=\"info\">Already have an account?</p>\r\n                <Link to={RoutesTypes.LOGIN} className=\"info blue\">Login</Link>\r\n            </div>\r\n        </motion.div>\r\n    )\r\n}","import * as ActionsTypes from \"../Constants/shouldUserLoginActionTypes\";\r\n\r\nexport function setShouldUserLogin(value){\r\n    return {\r\n        type: ActionsTypes.SET_SHOULD_USER_LOGIN,\r\n        payload: value\r\n    }\r\n}"],"names":["isUsernameAvailable","name","getDocs","collection","db","allUsers","isAvailable","forEach","user","data","username","SignUp","dispatch","useDispatch","navigate","useNavigate","useSelector","obj","currentUser","shouldUserLogin","useState","fullName","emailAddress","password","userData","setUserData","error","setError","setIsAvailable","isInvalid","length","useEffect","asyncHandle","to","RoutesTypes","event","preventDefault","setIsBeingLoaded","createUserWithEmailAndPassword","auth","setDoc","doc","uid","userId","toLowerCase","gender","birthday","phoneNumber","purchasesList","profileImage","dateCreated","Date","now","getDoc","currentDoc","setActiveUser","setShouldUserLogin","prevData","message","console","log","motion","className","initial","opacity","animate","exit","src","process","method","type","placeholder","value","onChange","target","autoComplete","disabled","onClick","handleLogin","ActionsTypes","payload"],"sourceRoot":""}