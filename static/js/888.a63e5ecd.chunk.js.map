{"version":3,"file":"static/js/888.a63e5ecd.chunk.js","mappings":"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","sources":["Pages/Cart/cart.jsx","Redux/Actions/shouldUserLoginActions.js"],"sourcesContent":["import React, { useMemo, useState } from \"react\";\r\nimport { CartItem } from \"../../Components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { clearCart } from \"../../Redux/Actions/cartActions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as RoutesTypes from \"../../Constants/routesTypes\";\r\nimport { addPurchase } from \"../../Redux/Actions/userActions\";\r\nimport { doc, updateDoc } from \"firebase/firestore\";\r\nimport { db } from \"../../Firebase/config\";\r\nimport { motion } from \"framer-motion\";\r\nimport \"./cart.scss\";\r\nimport { setIsBeingLoaded } from \"../../Redux/Actions/isBeingLoadedActions\";\r\nimport { setShouldUserLogin } from \"../../Redux/Actions/shouldUserLoginActions\";\r\n\r\nexport default function Cart(){\r\n    const dispatch = useDispatch();\r\n    const cart = useSelector(obj => obj.cart);\r\n    const user = useSelector(obj => obj.currentUser.user)\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const [isPurchaseDone, setIsPurchaseDone] = useState(false)\r\n\r\n    const uniqueCartItems = useMemo(() => cart\r\n        .reduce((accum, elem) => {\r\n            if (accum.every(item => item.id !== elem.id)) {\r\n                accum.push(elem);\r\n            }\r\n            return accum;\r\n        }, []),\r\n        [cart]\r\n    );\r\n\r\n    const cartBlocks = useMemo(() => uniqueCartItems\r\n        .map(elem => <CartItem\r\n            key={elem.id}\r\n            data={elem}\r\n        />),\r\n        [uniqueCartItems]\r\n    )\r\n\r\n    const finalPice = useMemo(() => cart\r\n        .reduce((price, elem) => {\r\n            price += elem?.price;\r\n            return price;\r\n        }, 0)\r\n        .toFixed(2),\r\n        [cart]\r\n    )\r\n\r\n    async function handleCheckOut() {\r\n        if (user.userId === \"\") {\r\n            dispatch(setShouldUserLogin(true));\r\n            navigate(RoutesTypes.LOGIN);\r\n            return;\r\n        }\r\n\r\n        dispatch(setIsBeingLoaded(true));\r\n\r\n        const date = new Date();\r\n\r\n        const newCartItems = uniqueCartItems.map(elem => {\r\n            const itemAmount = cart.reduce((counter, item) => {\r\n                if (elem.id === item.id) {\r\n                    counter++;\r\n                }\r\n                return counter;\r\n            }, 0)\r\n\r\n            console.log(elem);\r\n\r\n            const itemToUpdate = {\r\n                name: elem.title,\r\n                amount: itemAmount,\r\n                price: elem.price,\r\n                date: `${date.getDate()}-${date.getMonth()}-${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`,\r\n                image: elem.image,\r\n                id: elem.id\r\n            }\r\n\r\n            dispatch(addPurchase(itemToUpdate))\r\n\r\n            return itemToUpdate;\r\n        })\r\n\r\n        await updateDoc(doc(db, \"users\", user.userId), {\r\n            purchasesList: [...user.purchasesList, ...newCartItems]\r\n        })\r\n\r\n        dispatch(clearCart())\r\n        setIsPurchaseDone(true)\r\n        setTimeout(() => dispatch(setIsBeingLoaded(false)), 1000)\r\n    }\r\n\r\n    return (\r\n        <motion.div\r\n            className=\"div-column\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n        >\r\n            {!cart.length ?\r\n                <div className=\"special-message col-10\">\r\n                    {isPurchaseDone ?\r\n                        <p className=\"special-message-done\">Thank you!</p> :\r\n                        <p>Your cart is empty</p>}\r\n                </div> :\r\n                <div className=\"div-column\">\r\n                    <div className=\"grey-area\"></div>\r\n                    <div className=\"cart-container col-12 col-sm-11 col-md-10\">\r\n                        <div className=\"cart-bar\">\r\n                            <p>PRODUCT</p>\r\n                            <div className=\"bar-extra-text\">\r\n                                <p>PRICE</p>\r\n                                <p>QTY</p>\r\n                                <p>UNIT PRICE</p>\r\n                            </div>\r\n                        </div>\r\n                        {cartBlocks}\r\n                    </div>\r\n                    <div className=\"check-out-container col-12 col-sm-11 col-md-10\">\r\n                        <div className=\"check-out\">\r\n                            <div className=\"check-out-text check-out-p\">\r\n                                <p>Subtotal</p>\r\n                                <p>${finalPice}</p>\r\n                            </div>\r\n                            <div className=\"check-out-text check-out-p\">\r\n                                <p>Shipping fee</p>\r\n                                <p>No</p>\r\n                            </div>\r\n                            <div className=\"check-out-text check-out-p\">\r\n                                <p>Coupon</p>\r\n                                <p>No</p>\r\n                            </div>\r\n                            <div className=\"check-out-text check-out-p\">\r\n                                <p>TOTAL</p>\r\n                                <p>${finalPice}</p>\r\n                            </div>\r\n                            <button\r\n                                className=\"check-out-button\"\r\n                                onClick={handleCheckOut}\r\n                            >\r\n                                <h2 className=\"h2-default\">Check out</h2>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>}\r\n        </motion.div>\r\n    )\r\n}","import * as ActionsTypes from \"../Constants/shouldUserLoginActionTypes\";\r\n\r\nexport function setShouldUserLogin(value){\r\n    return {\r\n        type: ActionsTypes.SET_SHOULD_USER_LOGIN,\r\n        payload: value\r\n    }\r\n}"],"names":["Cart","dispatch","useDispatch","cart","useSelector","obj","user","currentUser","navigate","useNavigate","useState","isPurchaseDone","setIsPurchaseDone","uniqueCartItems","useMemo","reduce","accum","elem","every","item","id","push","cartBlocks","map","data","finalPice","price","toFixed","userId","setShouldUserLogin","RoutesTypes","setIsBeingLoaded","date","Date","newCartItems","itemAmount","counter","console","log","itemToUpdate","name","title","amount","getDate","getMonth","getFullYear","getHours","getMinutes","image","addPurchase","updateDoc","doc","db","purchasesList","clearCart","setTimeout","motion","className","initial","opacity","animate","exit","length","onClick","value","type","ActionsTypes","payload"],"sourceRoot":""}